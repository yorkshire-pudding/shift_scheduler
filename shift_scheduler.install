<?php
// $Id$

/**
 * @file
 *
 * Install file for the shift_scheduler module.
 */

function shift_scheduler_schema() {
  $schema['shift_scheduler_shifts'] = array(
    'description' => 'Holds the data for all the shifts taken by volunteers.',
    'fields' => array(
      'shift_id' => array(
        'description' => 'An arbitrary unique identifier for each shift',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'start_time' => array(
        'description' => 'The start time for a shift.',
        'type' => 'datetime',
        'not null' => TRUE,
      ),
      'end_time' => array(
        'description' => 'The start time for a shift.',
        'type' => 'datetime',
        'not null' => TRUE,
      ),
      'slot_id' => array(
        'description' => 'The position in the duty crew.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'A uid pointing to the volunteer that took the shift',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => FALSE,
      ),
    ),
    'primary key' => array('shift_id'),
  ); //closes schema array
  $schema['shift_scheduler_slots'] = array(
    'description' => 'Defines the different slots that must be filled in a work day.',
    'fields' => array(
      'slot_id' => array(
        'description' => 'An arbitrary unique identifier for each slot',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'display_name' => array(
        'description' => 'The user-visible name for the slot, e.g. Supervisor',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => '0 - Active, 1 - Deactivated',
        'size' => 'tiny',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('slot_id'),
  ); //closes the "$schema['shift_scheduler_slots'] = array(" line

  $schema['shift_scheduler_slot_times'] = array(
    'description' => 'Defines the shifts that are automatically filled in in each slot when days are added to the schedule',
    'fields' => array(
      'slot_time_id' => array(
        'description' => 'An arbitrary unique identifier for each slot time',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'slot_id' => array(
        'description' => 'The slot id to which this shift should be added',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'start_time' => array(
        'description' => 'The start time for a shift.',
        'type' => 'datetime',
        'not null' => TRUE,
      ),
      'end_time' => array(
        'description' => 'The start time for a shift.',
        'type' => 'datetime',
        'not null' => TRUE,
      ),
      'monday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'tuesday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'wednesday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'thursday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'friday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'saturday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'sunday' => array(
        'description' => 'Whether the shift occurs on this day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('slot_time_id'),
  );

  $schema['shift_scheduler_slot_roles'] = array(
    'description' => 'Defines the roles that are elligible to fill each slot.',
    'fields' => array(
      'slot_id' => array(
        'description' => 'The slot id of the slot for which the role is eligible',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rid' => array(
        'description' => 'The role ide of the role that is elligible to fill the slot.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('slot_id', 'rid'),
  );


  return $schema;
}



function shift_scheduler_update_6200() {

  $ret = array();
  db_change_field($ret, 'shift_scheduler_shifts', 'medic_slot', 'slot_id', array(
    'description' => 'The position in the duty crew.',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
  )
  );
  db_create_table($ret, 'shift_scheduler_slots', array(
    'description' => 'Defines the different slots that must be filled in a work day.',
    'fields' => array(
      'slot_id' => array(
        'description' => 'An arbitrary unique identifier for each slot',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'display_name' => array(
        'description' => 'The user-visible name for the slot, e.g. Supervisor',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => '0 - Active, 1 - Deactivated',
        'size' => 'tiny',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('slot_id'),
  )
  );
  db_create_table($ret, 'shift_scheduler_slot_times', array(
    'description' => 'Defines the shifts that are automatically filled in in each slot when days are added to the schedule'),
    'fields' => array(
      'slot_time_id' => array(
        'description' => 'An arbitrary unique identifier for each slot time',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'slot_id' => array(
        'description' => 'The slot id to which this shift should be added',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'start_time' => array(
        'description' => 'The start time for a shift.',
        'type' => 'datetime',
        'not null' => TRUE,
      ),
      'end_time' => array(
        'description' => 'The start time for a shift.',
        'type' => 'datetime',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('slot_time_id'),
  )
  );

  db_create_table($ret, 'shift_scheduler_slot_roles', array(
    'description' => 'Defines the roles that are elligible to fill each slot.',
    'fields' => array(
      'slot_id' => array(
        'description' => 'The slot id of the slot for which the role is eligible',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rid' => array(
        'description' => 'The role ide of the role that is elligible to fill the slot.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('slot_id', 'rid'),
  )
  );
  //by default make authenticated users eligible for previously existing slots
  $result = db_query('SELECT slot_id FROM  {shift_scheduler_slots}');
  while ($row = db_fetch_object($result)) {
    update_sql('INSERT INTO {shift_scheduler_slot_roles} (slot_id, rid) VALUES ('. $row->slot_id .', 2)');
  }

  db_change_field($ret, 'shift_scheduler_shifts', 'uid', 'uid', array(
    'description' => 'A uid pointing to the volunteer that took the shift',
    'type' => 'int',
    'not null' => FALSE,
    'unsigned' => FALSE,
  ));


  db_add_field($ret, 'shift_scheduler_slot_times', 'monday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));
  db_add_field($ret, 'shift_scheduler_slot_times', 'tuesday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));
  db_add_field($ret, 'shift_scheduler_slot_times', 'wednesday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));
  db_add_field($ret, 'shift_scheduler_slot_times', 'thursday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));
  db_add_field($ret, 'shift_scheduler_slot_times', 'friday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));
  db_add_field($ret, 'shift_scheduler_slot_times', 'saturday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));
  db_add_field($ret, 'shift_scheduler_slot_times', 'sunday', array(
    'description' => 'Whether the shift occurs on this day of the week',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'unsigned' => TRUE,
    'initial' => 1,
  ));

}


//standard functions to create and destroy
//the tables on install and uninstall
function shift_scheduler_install() {
  //create shift_scheduler tables	
  drupal_install_schema('shift_scheduler');
}

function shift_scheduler_uninstall() {
  //drop shift_scheduler talbes
  drupal_uninstall_schema('shift_scheduler');
}

